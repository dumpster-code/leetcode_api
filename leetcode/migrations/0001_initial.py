# Generated by Django 5.1.5 on 2025-02-08 14:34

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('time_taken', models.IntegerField()),
                ('failed_attempts', models.IntegerField()),
                ('failed_test_cases', models.JSONField()),
                ('failed_submissions', models.JSONField()),
                ('solution', models.JSONField()),
                ('personal_difficulty', models.FloatField()),
                ('notes', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('difficulty', models.CharField(max_length=6)),
                ('dislikes', models.IntegerField()),
                ('exampleTestcaseList', models.JSONField()),
                ('hints', models.JSONField()),
                ('isPaidOnly', models.BooleanField()),
                ('likes', models.IntegerField()),
                ('questionId', models.IntegerField(unique=True)),
                ('stats', models.JSONField()),
                ('title', models.CharField(max_length=128)),
                ('titleSlug', models.CharField(max_length=128)),
                ('codeSnippets', models.JSONField()),
                ('similarQuestionList', models.JSONField()),
                ('topicTags', models.JSONField()),
                ('url', models.CharField(max_length=256)),
                ('relatedProblems', models.ManyToManyField(blank=True, to='leetcode.problem')),
                ('topics', models.ManyToManyField(blank=True, related_name='problems', to='leetcode.topic')),
            ],
            options={
                'ordering': ['questionId'],
            },
        ),
    ]
